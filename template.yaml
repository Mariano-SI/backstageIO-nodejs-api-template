apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: teste-mariano-node-oop
  title: Example Node.js oop Template
  description: A template for creating a new component in the Backstage software catalog.
spec:
  owner: 'mariano'
  type: service
  parameters:
    - title: Fill in some steps
      required:
        - name
        - description
        - repoHost
        - repoUrl
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        description:
          title: Description
          type: string
          description: Add a description to the new component
          ui:options:
            rows: 5
        repoHost:
          title: Repository Host
          type: string
          description: Choose where to host your repository
          enum:
            - github
            - azure
          default: github
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
              - dev.azure.com
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: https://github.com/Mariano-SI/backstageIO-nodejs-api-template/tree/master/contents
        values:
          name: ${{ parameters.name }}
          description: ${{parameters.description}}

    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish to Github
      if: ${{ parameters.repoHost == 'github' }}
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: public # or 'internal' or 'private'

    - id: publish-azure
      name: Publish to Azure DevOps
      if: ${{ parameters.repoHost == 'azure' }}
      action: publish:azure
      input:
        allowedHosts: ['dev.azure.com']
        repoUrl: ${{ parameters.repoUrl }}
        organization: ${{ parseRepoUrl(parameters.repoUrl).organization }}
        project: ${{ parseRepoUrl(parameters.repoUrl).project }}
        repo: ${{ parseRepoUrl(parameters.repoUrl).repo }}
        description: This is ${{ parameters.description }}
    

    # The final step is to register our new component in the catalog.

    - id: Register 
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-azure'].output.repoContentsUrl if parameters.repoHost === 'azure' else steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
